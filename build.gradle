/*plugins {
    id 'java'
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.15.0",
    selenideVersion = "6.12.3",
    junitVersion = "5.8.1"

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}
test {
    useJUnitPlatform()
}
dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:1.9.6",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.github.javafaker:javafaker:1.0.2",
            "org.aeonbits.owner:owner:1.0.12",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            'org.junit.jupiter:junit-jupiter-params:5.8.1')
    implementation group: 'org.aeonbits.owner', name: 'owner', version: '1.0.4'
    implementation "org.slf4j:slf4j-api:2.0.6"
    implementation "org.slf4j:slf4j-simple:2.0.6"
    implementation "org.aspectj:aspectjweaver:1.9.2"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.0.3'
    implementation('io.qameta.allure:allure-okhttp3:2.14.0')
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:1.7.29",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

//implementation group: 'org.aeonbits.owner', name: 'owner', version: '1.0.12'
//implementation "org.slf4j:slf4j-api:2.0.6"
//implementation "org.slf4j:slf4j-simple:2.0.6"
//implementation "org.aspectj:aspectjweaver:1.9.2"
//testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.0.3'
//implementation('io.qameta.allure:allure-okhttp3:2.14.0')

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

*/

plugins {
    id 'java'
   // id "io.freefair.aspectj" version "8.3" // ??????????
    id 'java-library'
    id 'io.qameta.allure' version '2.11.0' //2.8.1
}
configurations {
    testCompile
}
repositories {
    mavenCentral()
    mavenLocal()
}

allure {
    version = '2.24.1' //2.15.0
    autoconfigure = true

    useJUnit5 {
        version = "2.24.0" //2.15.0
    }
}

test {
    useJUnitPlatform()
   // jvmArgs '--add-modules', 'java.xml.bind', '-Djdk.attach.allowAttachSelf=true'
}

dependencies {
    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.8.1',
            'org.junit.jupiter:junit-jupiter-params:5.8.1',
            'io.qameta.allure:allure-selenide:2.21.0', //2.15.0
            'org.aeonbits.owner:owner:1.0.12',
            'com.codeborne:selenide:6.12.3'

    )
    implementation group: 'org.aeonbits.owner', name: 'owner', version: '1.0.4'
    implementation "org.slf4j:slf4j-api:2.0.6"
    implementation "org.slf4j:slf4j-simple:2.0.6"
    implementation "org.aspectj:aspectjweaver:1.9.20" // СОВМЕСТИМА С gradle-7.5.1-bin!!!!!! https://stackoverflow.com/questions/77006662/aspectj-in-gradle-intellij-idea
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.0.3'
    implementation('io.qameta.allure:allure-okhttp3:2.14.0')
}